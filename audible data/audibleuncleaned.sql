select * from audible_cleaned;

/*
- change name to audio_book, author to writer, releaseDate to release_date
  starRating to star_rating, countOfRating to number_of_reviews
- combine hours and minutes as time format 
*/

alter table audible_cleaned
rename column audio_book to audio_book_title;
alter table audible_cleaned
rename column writer to writtenBy;
alter table audible_cleaned
rename column releasedate to release_date;
alter table audible_cleaned
rename column starRating to star_rating;
alter table audible_cleaned
rename column countOfRating to number_of_reviews;

create view time as
select audio_book,hours, minutes, sec_to_time(ifnull(hours,0)*3600+ifnull(minutes,0)*60) as time from
audible_cleaned;

select * from time;

/*
- calculate mean, median, standard dev for price, star rating, time
- Analyze the number of audiobooks released over time to identify trends
- Find the top-rated audiobooks.
- Analyze how the price of an audiobook relates to its rating.
- Find the audiobooks with the longest duration.
- Identify the writers with the most audiobooks.
- Identify narrators with the most audiobooks.
- give outline for star rating 
above 4 - popular and good book
above 3 to 4 - good book
above 2 to 3 - average book
below 2 - unpopular book
- Calculate the total revenue generated by each audiobook.
- Analyze revenue trends over months/years.
*/

-- calculate mean, median, standard dev for price, star rating, time
-- mean for average price for all the books, std dev for future predictions, for data filling median is used
create view descriptive_statistics_price as
select avg(price) as mean, 
(select avg(price) 
from (select price, row_number()over(order by price) as rowNum, count(price) over() as total_rows
 from audible_cleaned) as pricewithrows
 where rowNum in (floor((total_rows+1)/2), floor((total_rows+2)/2))) as median, 
stddev(price) as std_dev
from audible_cleaned;

select * from descriptive_statistics_price;

create view descriptive_statistics_starRAting as
select avg(star_rating) as mean, 
(select avg(star_rating) 
from (select star_rating, row_number()over(order by star_rating) as rowNum, count(star_rating) over() as total_rows
 from audible_cleaned) as starratingwithrows
 where rowNum in (floor((total_rows+1)/2), floor((total_rows+2)/2))) as median, 
stddev(star_rating) as std_dev
from audible_cleaned;

select * from descriptive_statistics_starRAting;
 
create view descriptive_statistics_time as
(select sec_to_time(avg(time)) as mean,
(select sec_to_time(avg(time))
from (select time, row_number()over(order by time) as rowNum, count(time) over() as total_rows
 from time) as timewithrows
 where rowNum in (floor((total_rows+1)/2), floor((total_rows+2)/2))) as median, 
sec_to_time(stddev(time)) as stv_dev from time);

select * from descriptive_statistics_time;

--  Analyze the number of audiobooks released over time to identify trends

create view analyze_books as
(select year(release_date) as year, count(audio_book) as totalBooks from audible_cleaned
group by year
order by year);
select * from analyze_books;
select year, totalBooks from analyze_books
where totalBooks = (select max(totalBooks) from analyze_books); -- 2021 year more books are released


-- Find the top-rated audiobooks.
create view top_rated_books as 
(select audio_book, language from audible_cleaned
where star_rating=5
order by language);

select * from top_rated_books;

-- Analyze how the price of an audiobook relates to its rating.

select distinct star_rating, avg(price) from audible_cleaned
group by star_rating
order by star_rating;

-- Find the audiobooks with the longest duration.

select audio_book, hours from audible_cleaned
where hours=(select max(hours) from audible_cleaned);

select audio_book_title, duration,top_rating ,`rank` from
(select audio_book_title, duration,top_rating, dense_rank()over(order by duration asc) as `rank` 
from audible_book_data) as a
where duration-(select median from descriptive_statistics_time) in (select timeDiff from time_diff_lessthan20k)
order by top_rating desc;

create view time_diff_lessthan20k as
select distinct * from(select duration - (select median from descriptive_statistics_time) as timeDiff 
from audible_book_data
order by duration desc) as a 
where a.timeDiff<20000 and a.timeDiff>0; 


-- Identify the writers with the most audiobooks.

create view famous_writers as
select written_by, count(audio_book_title) as totalbooks, avg(top_rating) as avg_rating
 from audible_book_data
group by written_by
having avg_rating>2
order by avg_rating desc, totalbooks desc;

select * from famous_writers;

-- Identify narrators with the most audiobooks.

create view famous_narrators as
select narrated_by, count(audio_book_title) as totalbooks, avg(top_rating) as avg_rating
 from audible_book_data
group by written_by
having avg_rating>2
order by avg_rating desc, totalbooks desc;

select * from famous_narrators;

/*
- give outline for star rating 
above 4 - popular and good book
above 3 to 4 - good book
above 2 to 3 - average book
below 2 - unpopular book
*/
create view book_review as
select audio_book, star_rating,
case when star_rating>4 then 'popular and good book'
when star_rating>3 and star_rating<4 then 'good book'
when star_rating>2 and star_rating<3 then 'average book'
else 'unpopular book' end as outline
from audible_cleaned
where star_rating>1;

select * from book_review;

-- Calculate the total revenue generated by each audiobook.

create view analyzeREvenue as 
select audio_book, price*number_of_reviews as totalrevenue
from audible_cleaned;

-- Analyze revenue trends over months/years.

create view analyzeREvenueMandY as
select year(release_date) as year, monthname((release_date)) as month, sum(price*number_of_reviews) as totalrevenue
from audible_cleaned
group by year, month
order by year, month;

select * from analyzeREvenueMandY;


